{"version":3,"sources":["components/SearchBar/SearchBar.module.css","components/App/App.module.css","components/UserList/UserList.module.css","components/UserList/UserListItem/UserListItem.module.css","store/slices/usersSearch/state.ts","components/Error/Error.tsx","components/UserList/UserListItem/UserListItem.tsx","components/UserList/UserList.tsx","services/gitsearch.service.ts","store/slices/usersSearch/selectors.ts","store/slices/usersSearch/reducers.ts","store/slices/usersSearch/index.ts","components/SearchBar/SearchBar.tsx","components/App/App.tsx","store/index.ts","index.tsx"],"names":["module","exports","UsersSearchStatus","UsersSearchError","Error","text","UserListItem","data","username","avatar","followers","following","className","styles","user","onClick","window","open","src","alt","user__avatar","user__info","user__username","user__followers","user__following","UserList","users","users_list","map","key","request","initialState","items","status","Fulfilled","error","EmptyQuery","usersSearchSelectors","state","usersSearch","searchUsersByUsername","createAsyncThunk","query","a","cancel","axios","CancelToken","source","get","cancelToken","token","reducers","setText","payload","slice","createSlice","name","extraReducers","addCase","pending","Pending","fulfilled","length","None","UsersNotFound","rejected","message","ServerIsUnavailable","APILimitIsExceeded","UnexpectedError","Rejected","usersSearchActions","actions","usersSearchReducer","reducer","SearchBar","dispatch","useDispatch","useSelector","useState","lastQuery","setLastQuery","search_bar","search_bar__input","type","onKeyUp","event","onChange","target","value","toString","trim","icon","faSearch","search_bar__icon","App","content","useMemo","width","height","color","git_search","git_search__title","store","configureStore","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.114a2c07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_bar\":\"SearchBar_search_bar__199_m\",\"search_bar__icon\":\"SearchBar_search_bar__icon__1CQkG\",\"search_bar__input\":\"SearchBar_search_bar__input__3-01c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"git_search\":\"App_git_search__3EhtQ\",\"git_search__title\":\"App_git_search__title__2VR_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_list\":\"UserList_users_list__2tbOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserListItem_user__1Pdpw\",\"user__info\":\"UserListItem_user__info__1t4xg\",\"user__username\":\"UserListItem_user__username__3F1A5\",\"user__avatar\":\"UserListItem_user__avatar__J4vTl\",\"user__following\":\"UserListItem_user__following__2_ltb\",\"user__followers\":\"UserListItem_user__followers__357-g\"};","export enum UsersSearchStatus {\n\tPending,\n\tFulfilled,\n\tRejected,\n}\n\nexport type User = {\n\tusername: string\n\tavatar: string\n\tfollowers: number\n\tfollowing: number\n}\n\nexport enum UsersSearchError {\n\tNone = '',\n\tUsersNotFound = 'Users for your request were not found.',\n\tEmptyQuery = 'Enter something to search.',\n\tServerIsUnavailable = 'GitSearch server is not available.',\n\tAPILimitIsExceeded = 'Github API limit exceeded. Try again in a minute.',\n\tUnexpectedError = 'Unexpected error occured while fetching data.',\n}\n\nexport type UsersSearchState = {\n\titems: User[]\n\ttext: string\n\tstatus: UsersSearchStatus\n\terror: UsersSearchError\n}\n\nexport const initialState: UsersSearchState = {\n\titems: [],\n\ttext: '',\n\tstatus: UsersSearchStatus.Fulfilled,\n\terror: UsersSearchError.EmptyQuery,\n}\n","import React, { Fragment } from 'react'\n\ninterface ErrorProps {\n\ttext: string\n}\n\nexport const Error: React.FC<ErrorProps> = ({ text }) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<p>{text}</p>\n\t\t</Fragment>\n\t)\n}\n","import React from 'react'\n\nimport { User } from '@/store/slices/usersSearch/state'\n\nimport styles from './UserListItem.module.css'\n\ninterface UserListItemProps {\n\tdata: User\n}\n\nexport const UserListItem: React.FC<UserListItemProps> = ({ data: { username, avatar, followers, following } }) => {\n\treturn (\n\t\t<div className={styles.user} onClick={() => window.open(`https://github.com/${username}`, '_blank')}>\n\t\t\t<img src={avatar} alt=\"Avatar\" className={styles.user__avatar} />\n\t\t\t<div className={styles.user__info}>\n\t\t\t\t<div className={styles.user__username}>{username}</div>\n\t\t\t\t<div className={styles.user__followers}>{followers} followers</div>\n\t\t\t\t<div className={styles.user__following}>{following} following</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\n\nimport { UserListItem } from '@/components/UserList/UserListItem/UserListItem'\nimport { User } from '@/store/slices/usersSearch/state'\n\nimport styles from './UserList.module.css'\n\ninterface UserListProps {\n\tusers: User[]\n}\n\nexport const UserList: React.FC<UserListProps> = ({ users }) => {\n\treturn (\n\t\t<div className={styles.users_list}>\n\t\t\t{users.map(user => (\n\t\t\t\t<UserListItem key={user.username} data={user} />\n\t\t\t))}\n\t\t</div>\n\t)\n}\n","import axios, { CancelTokenSource } from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { UsersSearchError } from '@/store/slices/usersSearch/state'\n\nconst url = 'https://morning-crag-46357.herokuapp.com/api'\n\nlet request: CancelTokenSource\n\n/**\n * Calls own API's search request\n * @param  {string} query - part of username\n * @returns Promise\n */\nexport const searchUsersByUsername = createAsyncThunk('usersSearch/searchUserByUsername', async (query: string) => {\n\tif (!query) throw new Error(UsersSearchError.EmptyQuery)\n\tif (request) request.cancel()\n\n\trequest = axios.CancelToken.source()\n\tconst { data } = await axios.get(`${url}/users/search?query=${query}`, { cancelToken: request.token })\n\treturn data\n})\n","import { ReduxStore } from '@/store'\n\nexport const usersSearchSelectors = {\n\titems: (state: ReduxStore) => state.usersSearch.items,\n\tstatus: (state: ReduxStore) => state.usersSearch.status,\n\ttext: (state: ReduxStore) => state.usersSearch.text,\n\terror: (state: ReduxStore) => state.usersSearch.error,\n}\n","import { searchUsersByUsername } from '@/services/gitsearch.service'\nimport { ActionReducerMapBuilder, PayloadAction, SerializedError } from '@reduxjs/toolkit'\nimport { User, UsersSearchError, UsersSearchState, UsersSearchStatus } from './state'\n\nexport const reducers = {\n\tsetText: (state: UsersSearchState, { payload }: PayloadAction<string>): UsersSearchState => {\n\t\treturn { ...state, text: payload }\n\t},\n}\n\nexport const extraReducers = ({ addCase }: ActionReducerMapBuilder<UsersSearchState>) => {\n\taddCase(searchUsersByUsername.pending, (state: UsersSearchState) => {\n\t\treturn { ...state, status: UsersSearchStatus.Pending }\n\t})\n\n\taddCase(searchUsersByUsername.fulfilled, (state: UsersSearchState, { payload }: PayloadAction<User[]>) => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tstatus: UsersSearchStatus.Fulfilled,\n\t\t\titems: payload,\n\t\t\terror: payload.length ? UsersSearchError.None : UsersSearchError.UsersNotFound,\n\t\t}\n\t})\n\n\taddCase(\n\t\tsearchUsersByUsername.rejected,\n\t\t(state: UsersSearchState, { error: { message } }: { error: SerializedError }) => {\n\t\t\tif (!message || message === 'Cancel') return { ...state }\n\n\t\t\tlet error: UsersSearchError\n\n\t\t\tswitch (message) {\n\t\t\t\tcase UsersSearchError.EmptyQuery:\n\t\t\t\t\terror = UsersSearchError.EmptyQuery\n\t\t\t\t\tbreak\n\t\t\t\tcase 'Error: Network Error':\n\t\t\t\t\terror = UsersSearchError.ServerIsUnavailable\n\t\t\t\t\tbreak\n\t\t\t\tcase 'Error: Request failed with status code 403':\n\t\t\t\t\terror = UsersSearchError.APILimitIsExceeded\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\terror = UsersSearchError.UnexpectedError\n\t\t\t}\n\n\t\t\treturn { ...state, status: UsersSearchStatus.Rejected, error }\n\t\t}\n\t)\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { reducers, extraReducers } from './reducers'\nimport { initialState } from './state'\n\nconst slice = createSlice({\n\tname: 'usersSearch',\n\tinitialState,\n\treducers,\n\textraReducers,\n})\n\nexport const { actions: usersSearchActions, reducer: usersSearchReducer } = slice\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { usersSearchSelectors } from '@/store/slices/usersSearch/selectors'\nimport { searchUsersByUsername } from '@/services/gitsearch.service'\nimport { usersSearchActions } from '@/store/slices/usersSearch'\n\nimport styles from './SearchBar.module.css'\n\nexport const SearchBar: React.FC = () => {\n\tconst dispatch = useDispatch()\n\tconst query = useSelector(usersSearchSelectors.text)\n\tconst [lastQuery, setLastQuery] = useState('')\n\n\tconst onKeyUp = (event: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (event.key !== 'Enter' || lastQuery === query) return\n\t\tdispatch(searchUsersByUsername(query))\n\t\tsetLastQuery(query)\n\t}\n\n\tconst onChange = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tdispatch(usersSearchActions.setText(event.target.value.toString().trim()))\n\t}\n\n\tconst onClick = () => {\n\t\tif (lastQuery === query) return\n\t\tdispatch(searchUsersByUsername(query))\n\t\tsetLastQuery(query)\n\t}\n\n\treturn (\n\t\t<div className={styles.search_bar}>\n\t\t\t<input\n\t\t\t\tclassName={styles.search_bar__input}\n\t\t\t\ttype=\"text\"\n\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\tonChange={onChange}\n\t\t\t\tvalue={query}\n\t\t\t/>\n\t\t\t<div onClick={onClick}>\n\t\t\t\t<FontAwesomeIcon icon={faSearch} className={styles.search_bar__icon} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React, { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport Loader from 'react-loader-spinner'\n\nimport { Error } from '@/components/Error/Error'\nimport { UserList } from '@/components/UserList/UserList'\nimport { UsersSearchStatus } from '@/store/slices/usersSearch/state'\nimport { SearchBar } from '@/components/SearchBar/SearchBar'\nimport { usersSearchSelectors } from '@/store/slices/usersSearch/selectors'\n\nimport styles from './App.module.css'\n\nexport const App: React.FC = () => {\n\tconst users = useSelector(usersSearchSelectors.items)\n\tconst status = useSelector(usersSearchSelectors.status)\n\tconst error = useSelector(usersSearchSelectors.error)\n\n\tconst content = useMemo(() => {\n\t\tif (status === UsersSearchStatus.Pending)\n\t\t\treturn <Loader width={50} height={50} type=\"ThreeDots\" color=\"#000000\" />\n\t\tif (error) return <Error text={error} />\n\t\treturn <UserList users={users} />\n\t}, [error, status, users])\n\n\treturn (\n\t\t<div className={styles.git_search}>\n\t\t\t<div className={styles.git_search__title}>GitSearch</div>\n\t\t\t<SearchBar />\n\t\t\t{content}\n\t\t</div>\n\t)\n}\n","import { usersSearchReducer } from '@/store/slices/usersSearch'\nimport { configureStore } from '@reduxjs/toolkit'\n\nexport const store = configureStore({\n\treducer: {\n\t\tusersSearch: usersSearchReducer,\n\t},\n})\n\nexport type ReduxStore = ReturnType<typeof store.getState>\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { App } from '@/components/App/App'\nimport { store } from '@/store'\n\nimport '@/index.css'\n\nrender(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}